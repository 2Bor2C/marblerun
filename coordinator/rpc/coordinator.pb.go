// Code generated by protoc-gen-go. DO NOT EDIT.
// source: coordinator.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActivationReq struct {
	// TODO: sending the quote via metadata/context would be cleaner.
	Quote                []byte   `protobuf:"bytes,1,opt,name=Quote,proto3" json:"Quote,omitempty"`
	CSR                  []byte   `protobuf:"bytes,2,opt,name=CSR,proto3" json:"CSR,omitempty"`
	MarbleType           string   `protobuf:"bytes,3,opt,name=MarbleType,proto3" json:"MarbleType,omitempty"`
	UUID                 string   `protobuf:"bytes,4,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivationReq) Reset()         { *m = ActivationReq{} }
func (m *ActivationReq) String() string { return proto.CompactTextString(m) }
func (*ActivationReq) ProtoMessage()    {}
func (*ActivationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_99e779eb11ceee19, []int{0}
}

func (m *ActivationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivationReq.Unmarshal(m, b)
}
func (m *ActivationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivationReq.Marshal(b, m, deterministic)
}
func (m *ActivationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivationReq.Merge(m, src)
}
func (m *ActivationReq) XXX_Size() int {
	return xxx_messageInfo_ActivationReq.Size(m)
}
func (m *ActivationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivationReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActivationReq proto.InternalMessageInfo

func (m *ActivationReq) GetQuote() []byte {
	if m != nil {
		return m.Quote
	}
	return nil
}

func (m *ActivationReq) GetCSR() []byte {
	if m != nil {
		return m.CSR
	}
	return nil
}

func (m *ActivationReq) GetMarbleType() string {
	if m != nil {
		return m.MarbleType
	}
	return ""
}

func (m *ActivationReq) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type ActivationResp struct {
	Parameters           *Parameters `protobuf:"bytes,1,opt,name=Parameters,proto3" json:"Parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ActivationResp) Reset()         { *m = ActivationResp{} }
func (m *ActivationResp) String() string { return proto.CompactTextString(m) }
func (*ActivationResp) ProtoMessage()    {}
func (*ActivationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_99e779eb11ceee19, []int{1}
}

func (m *ActivationResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivationResp.Unmarshal(m, b)
}
func (m *ActivationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivationResp.Marshal(b, m, deterministic)
}
func (m *ActivationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivationResp.Merge(m, src)
}
func (m *ActivationResp) XXX_Size() int {
	return xxx_messageInfo_ActivationResp.Size(m)
}
func (m *ActivationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivationResp.DiscardUnknown(m)
}

var xxx_messageInfo_ActivationResp proto.InternalMessageInfo

func (m *ActivationResp) GetParameters() *Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Parameters struct {
	Files                map[string]string `protobuf:"bytes,1,rep,name=Files,proto3" json:"Files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Env                  map[string]string `protobuf:"bytes,2,rep,name=Env,proto3" json:"Env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Argv                 []string          `protobuf:"bytes,3,rep,name=Argv,proto3" json:"Argv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Parameters) Reset()         { *m = Parameters{} }
func (m *Parameters) String() string { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()    {}
func (*Parameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_99e779eb11ceee19, []int{2}
}

func (m *Parameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameters.Unmarshal(m, b)
}
func (m *Parameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameters.Marshal(b, m, deterministic)
}
func (m *Parameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameters.Merge(m, src)
}
func (m *Parameters) XXX_Size() int {
	return xxx_messageInfo_Parameters.Size(m)
}
func (m *Parameters) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameters.DiscardUnknown(m)
}

var xxx_messageInfo_Parameters proto.InternalMessageInfo

func (m *Parameters) GetFiles() map[string]string {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Parameters) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Parameters) GetArgv() []string {
	if m != nil {
		return m.Argv
	}
	return nil
}

func init() {
	proto.RegisterType((*ActivationReq)(nil), "rpc.ActivationReq")
	proto.RegisterType((*ActivationResp)(nil), "rpc.ActivationResp")
	proto.RegisterType((*Parameters)(nil), "rpc.Parameters")
	proto.RegisterMapType((map[string]string)(nil), "rpc.Parameters.EnvEntry")
	proto.RegisterMapType((map[string]string)(nil), "rpc.Parameters.FilesEntry")
}

func init() { proto.RegisterFile("coordinator.proto", fileDescriptor_99e779eb11ceee19) }

var fileDescriptor_99e779eb11ceee19 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4f, 0x4b, 0xfb, 0x40,
	0x14, 0x24, 0xdd, 0xb6, 0xb4, 0xaf, 0xbf, 0x3f, 0xba, 0x7a, 0x58, 0x72, 0x90, 0x52, 0x44, 0x8a,
	0x87, 0x44, 0x5a, 0x90, 0x22, 0x78, 0xa8, 0x5a, 0xc1, 0x83, 0xa0, 0xab, 0xbd, 0x78, 0x4b, 0xd3,
	0x47, 0x0d, 0x4d, 0xb3, 0xeb, 0xee, 0x26, 0x90, 0x6f, 0xed, 0x47, 0x90, 0xdd, 0x28, 0x8d, 0xf5,
	0xe4, 0x6d, 0x76, 0xde, 0xcc, 0xfb, 0x33, 0x09, 0xec, 0xc7, 0x42, 0xa8, 0x65, 0x92, 0x45, 0x46,
	0xa8, 0x40, 0x2a, 0x61, 0x04, 0x25, 0x4a, 0xc6, 0x83, 0x35, 0xfc, 0x9d, 0xc6, 0x26, 0x29, 0x22,
	0x93, 0x88, 0x8c, 0xe3, 0x1b, 0x3d, 0x84, 0xd6, 0x63, 0x2e, 0x0c, 0x32, 0xaf, 0xef, 0x0d, 0xff,
	0xf0, 0xea, 0x41, 0xf7, 0x80, 0x5c, 0x3f, 0x71, 0xd6, 0x70, 0x9c, 0x85, 0xf4, 0x08, 0xe0, 0x3e,
	0x52, 0x8b, 0x14, 0x9f, 0x4b, 0x89, 0x8c, 0xf4, 0xbd, 0x61, 0x97, 0xd7, 0x18, 0x4a, 0xa1, 0x39,
	0x9f, 0xdf, 0xdd, 0xb0, 0xa6, 0xab, 0x38, 0x3c, 0x98, 0xc2, 0xbf, 0xfa, 0x30, 0x2d, 0x69, 0x08,
	0xf0, 0x10, 0xa9, 0x68, 0x83, 0x06, 0x95, 0x76, 0x23, 0x7b, 0xa3, 0xff, 0x81, 0x92, 0x71, 0xb0,
	0xa5, 0x79, 0x4d, 0x32, 0x78, 0xf7, 0xea, 0x0e, 0x7a, 0x06, 0xad, 0xdb, 0x24, 0x45, 0x6b, 0x25,
	0xc3, 0xde, 0xc8, 0xdf, 0xb1, 0x06, 0xae, 0x38, 0xcb, 0x8c, 0x2a, 0x79, 0x25, 0xa4, 0xa7, 0x40,
	0x66, 0x59, 0xc1, 0x1a, 0x4e, 0xcf, 0x76, 0xf5, 0xb3, 0xac, 0xa8, 0xd4, 0x56, 0x64, 0x6f, 0x98,
	0xaa, 0x55, 0xc1, 0x48, 0x9f, 0xd8, 0x1b, 0x2c, 0xf6, 0x27, 0x00, 0xdb, 0xa6, 0x36, 0x97, 0x35,
	0x96, 0x6e, 0xf1, 0x2e, 0xb7, 0xd0, 0xe6, 0x57, 0x44, 0x69, 0x8e, 0x2e, 0xab, 0x2e, 0xaf, 0x1e,
	0x17, 0x8d, 0x89, 0xe7, 0x9f, 0x43, 0xe7, 0xab, 0xfd, 0x6f, 0x7c, 0xa3, 0x4b, 0x68, 0x57, 0xb9,
	0xd2, 0x31, 0x74, 0x3e, 0xf3, 0x43, 0x4a, 0xdd, 0xea, 0xdf, 0xbe, 0x9d, 0x7f, 0xf0, 0x83, 0xd3,
	0xf2, 0xea, 0xe4, 0xe5, 0x78, 0x95, 0x98, 0xd7, 0x7c, 0x11, 0xc4, 0x62, 0x13, 0xe2, 0x72, 0x85,
	0x29, 0x6a, 0xad, 0x4b, 0x1d, 0x6e, 0x5c, 0x57, 0x95, 0x67, 0xa1, 0x92, 0xf1, 0xa2, 0xed, 0xfe,
	0x8a, 0xf1, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xb0, 0xcd, 0xd2, 0x2a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MarbleClient is the client API for Marble service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MarbleClient interface {
	// Activate activates a marble in the mesh.
	Activate(ctx context.Context, in *ActivationReq, opts ...grpc.CallOption) (*ActivationResp, error)
}

type marbleClient struct {
	cc *grpc.ClientConn
}

func NewMarbleClient(cc *grpc.ClientConn) MarbleClient {
	return &marbleClient{cc}
}

func (c *marbleClient) Activate(ctx context.Context, in *ActivationReq, opts ...grpc.CallOption) (*ActivationResp, error) {
	out := new(ActivationResp)
	err := c.cc.Invoke(ctx, "/rpc.Marble/Activate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MarbleServer is the server API for Marble service.
type MarbleServer interface {
	// Activate activates a marble in the mesh.
	Activate(context.Context, *ActivationReq) (*ActivationResp, error)
}

// UnimplementedMarbleServer can be embedded to have forward compatible implementations.
type UnimplementedMarbleServer struct {
}

func (*UnimplementedMarbleServer) Activate(ctx context.Context, req *ActivationReq) (*ActivationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Activate not implemented")
}

func RegisterMarbleServer(s *grpc.Server, srv MarbleServer) {
	s.RegisterService(&_Marble_serviceDesc, srv)
}

func _Marble_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarbleServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Marble/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarbleServer).Activate(ctx, req.(*ActivationReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Marble_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Marble",
	HandlerType: (*MarbleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Activate",
			Handler:    _Marble_Activate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coordinator.proto",
}
